// Code generated by MockGen. DO NOT EDIT.
// Source: gororoba/handler (interfaces: SuggestionHandlerInterface)
//
// Generated by this command:
//
//	mockgen -destination=../testdata/mocks/suggestion_handler_mock.go -package=mocks gororoba/handler SuggestionHandlerInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockSuggestionHandlerInterface is a mock of SuggestionHandlerInterface interface.
type MockSuggestionHandlerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSuggestionHandlerInterfaceMockRecorder
	isgomock struct{}
}

// MockSuggestionHandlerInterfaceMockRecorder is the mock recorder for MockSuggestionHandlerInterface.
type MockSuggestionHandlerInterfaceMockRecorder struct {
	mock *MockSuggestionHandlerInterface
}

// NewMockSuggestionHandlerInterface creates a new mock instance.
func NewMockSuggestionHandlerInterface(ctrl *gomock.Controller) *MockSuggestionHandlerInterface {
	mock := &MockSuggestionHandlerInterface{ctrl: ctrl}
	mock.recorder = &MockSuggestionHandlerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSuggestionHandlerInterface) EXPECT() *MockSuggestionHandlerInterfaceMockRecorder {
	return m.recorder
}

// GetSuggestedCategoryByTime mocks base method.
func (m *MockSuggestionHandlerInterface) GetSuggestedCategoryByTime(t time.Time) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSuggestedCategoryByTime", t)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetSuggestedCategoryByTime indicates an expected call of GetSuggestedCategoryByTime.
func (mr *MockSuggestionHandlerInterfaceMockRecorder) GetSuggestedCategoryByTime(t any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSuggestedCategoryByTime", reflect.TypeOf((*MockSuggestionHandlerInterface)(nil).GetSuggestedCategoryByTime), t)
}
