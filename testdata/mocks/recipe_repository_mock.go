// Code generated by MockGen. DO NOT EDIT.
// Source: gororoba/repository (interfaces: RecipeRepositoryInterface)
//
// Generated by this command:
//
//	mockgen -destination=./../testdata/mocks/recipe_repository_mock.go gororoba/repository RecipeRepositoryInterface
//

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	domain "gororoba/domain"
	model "gororoba/model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRecipeRepositoryInterface is a mock of RecipeRepositoryInterface interface.
type MockRecipeRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRecipeRepositoryInterfaceMockRecorder
	isgomock struct{}
}

// MockRecipeRepositoryInterfaceMockRecorder is the mock recorder for MockRecipeRepositoryInterface.
type MockRecipeRepositoryInterfaceMockRecorder struct {
	mock *MockRecipeRepositoryInterface
}

// NewMockRecipeRepositoryInterface creates a new mock instance.
func NewMockRecipeRepositoryInterface(ctrl *gomock.Controller) *MockRecipeRepositoryInterface {
	mock := &MockRecipeRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockRecipeRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecipeRepositoryInterface) EXPECT() *MockRecipeRepositoryInterfaceMockRecorder {
	return m.recorder
}

// CreateRecipe mocks base method.
func (m *MockRecipeRepositoryInterface) CreateRecipe(recipe model.RecipeModel) *domain.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateRecipe", recipe)
	ret0, _ := ret[0].(*domain.Error)
	return ret0
}

// CreateRecipe indicates an expected call of CreateRecipe.
func (mr *MockRecipeRepositoryInterfaceMockRecorder) CreateRecipe(recipe any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateRecipe", reflect.TypeOf((*MockRecipeRepositoryInterface)(nil).CreateRecipe), recipe)
}

// GetRecipesByCategory mocks base method.
func (m *MockRecipeRepositoryInterface) GetRecipesByCategory(category string) []domain.Recipe {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecipesByCategory", category)
	ret0, _ := ret[0].([]domain.Recipe)
	return ret0
}

// GetRecipesByCategory indicates an expected call of GetRecipesByCategory.
func (mr *MockRecipeRepositoryInterfaceMockRecorder) GetRecipesByCategory(category any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecipesByCategory", reflect.TypeOf((*MockRecipeRepositoryInterface)(nil).GetRecipesByCategory), category)
}
